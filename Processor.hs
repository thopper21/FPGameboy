module Processor where

import Data
import Data.Word
import Memory
import Register

data ByteArg = A | B | C | D | E | H | L | BytePointer WordArg | HighRam ByteArg | ImmediateByte
   
data WordArg = AF | BC | DE | HL | SP | WordPointer WordArg | ImmediateWord

data JumpCondition = JumpNZ | JumpZ | JumpNC | JumpC

data Instruction =
   LD ByteArg ByteArg |
   LDD ByteArg ByteArg |
   LDI ByteArg ByteArg |
   LDH ByteArg ByteArg |
   LD16 WordArg WordArg |
   LDHL WordArg ByteArg |
   PUSH WordArg |
   POP WordArg |
   ADD ByteArg |
   ADC ByteArg |
   SUB ByteArg |
   SBC ByteArg |
   AND ByteArg |
   OR ByteArg |
   XOR ByteArg |
   CP ByteArg |
   INC ByteArg |
   DEC ByteArg |
   ADD16 WordArg |
   ADDSP ByteArg |
   INC16 WordArg |
   DEC16 WordArg |
   SWAP ByteArg |
   DAA |
   CPL |
   CCF |
   SCF |
   NOP |
   HALT |
   STOP |
   DI |
   EI |
   RLC ByteArg |
   RL ByteArg |
   RRC ByteArg |
   RR ByteArg |
   SLA ByteArg |
   SRA ByteArg |
   SRL ByteArg |
   BIT Word8 ByteArg |
   SET Word8 ByteArg |
   RES Word8 ByteArg |
   JP WordArg |
   JPC JumpCondition WordArg |
   JR ByteArg |
   JRC JumpCondition ByteArg |
   CALL WordArg |
   CALLC JumpCondition WordArg |
   RST Word8 |
   RET |
   RETC JumpCondition |
   RETI |
   COMPOUND

instruction (Byte opCode) =
   case opCode of
      0x3E -> (LD A ImmediateByte, 8)
      0x06 -> (LD B ImmediateByte, 8)
      0x0E -> (LD C ImmediateByte, 8)
      0x16 -> (LD D ImmediateByte, 8)
      0x1E -> (LD E ImmediateByte, 8)
      0x26 -> (LD H ImmediateByte, 8)
      0x2E -> (LD L ImmediateByte, 8)
      0x7F -> (LD A A, 4)
      0x78 -> (LD A B, 4)
      0x79 -> (LD A C, 4)
      0x7A -> (LD A D, 4)
      0x7B -> (LD A E, 4)
      0x7C -> (LD A H, 4)
      0x7D -> (LD A L, 4)
      0x0A -> (LD A (BytePointer BC), 8)
      0x1A -> (LD A (BytePointer DE), 8)
      0x7E -> (LD A (BytePointer HL), 8)
      0xFA -> (LD A (BytePointer ImmediateWord), 16)
      0x47 -> (LD B A, 4)
      0x40 -> (LD B B, 4)
      0x41 -> (LD B C, 4)
      0x42 -> (LD B D, 4)
      0x43 -> (LD B E, 4)
      0x44 -> (LD B H, 4)
      0x45 -> (LD B L, 4)
      0x46 -> (LD B (BytePointer HL), 8)
      0x4F -> (LD C A, 4)
      0x48 -> (LD C B, 4)
      0x49 -> (LD C C, 4)
      0x4A -> (LD C D, 4)
      0x4B -> (LD C E, 4)
      0x4C -> (LD C H, 4)
      0x4D -> (LD C L, 4)
      0x4E -> (LD C (BytePointer HL), 8)
      0x57 -> (LD D A, 4)
      0x50 -> (LD D B, 4)
      0x51 -> (LD D C, 4)
      0x52 -> (LD D D, 4)
      0x53 -> (LD D E, 4)
      0x54 -> (LD D H, 4)
      0x55 -> (LD D L, 4)
      0x56 -> (LD D (BytePointer HL), 8)
      0x5F -> (LD E A, 4)
      0x58 -> (LD E B, 4)
      0x59 -> (LD E C, 4)
      0x5A -> (LD E D, 4)
      0x5B -> (LD E E, 4)
      0x5C -> (LD E H, 4)
      0x5D -> (LD E L, 4)
      0x5E -> (LD E (BytePointer HL), 8)
      0x67 -> (LD H A, 4)
      0x60 -> (LD H B, 4)
      0x61 -> (LD H C, 4)
      0x62 -> (LD H D, 4)
      0x63 -> (LD H E, 4)
      0x64 -> (LD H H, 4)
      0x65 -> (LD H L, 4)
      0x66 -> (LD H (BytePointer HL), 8)
      0x6F -> (LD L A, 4)
      0x68 -> (LD L B, 4)
      0x69 -> (LD L C, 4)
      0x6A -> (LD L D, 4)
      0x6B -> (LD L E, 4)
      0x6C -> (LD L H, 4)
      0x6D -> (LD L L, 4)
      0x6E -> (LD L (BytePointer HL), 8)
      0x70 -> (LD (BytePointer HL) B, 8)
      0x71 -> (LD (BytePointer HL) C, 8)
      0x72 -> (LD (BytePointer HL) D, 8)
      0x73 -> (LD (BytePointer HL) E, 8)
      0x74 -> (LD (BytePointer HL) H, 8)
      0x75 -> (LD (BytePointer HL) L, 8)
      0x36 -> (LD (BytePointer HL) ImmediateByte, 12)
      0x02 -> (LD (BytePointer BC) A, 8)
      0x12 -> (LD (BytePointer DE) A, 8)
      0x77 -> (LD (BytePointer HL) A, 8)
      0xEA -> (LD (BytePointer ImmediateWord) A, 16)
      0xF2 -> (LD A (HighRam C), 8)
      0xE2 -> (LD (HighRam C) A, 8)
      0x3A -> (LDD A (BytePointer HL), 8)
      0x32 -> (LDD (BytePointer HL) A, 8)
      0x2A -> (LDI A (BytePointer HL), 8)
      0x22 -> (LDI (BytePointer HL) A, 8)
      0xE0 -> (LDH (HighRam ImmediateByte) A, 12)
      0xF0 -> (LDH A (HighRam ImmediateByte), 12)
      0x01 -> (LD16 BC ImmediateWord, 12)
      0x11 -> (LD16 DE ImmediateWord, 12)
      0x21 -> (LD16 HL ImmediateWord, 12)
      0x31 -> (LD16 SP ImmediateWord, 12)
      0xF9 -> (LD16 SP HL, 8)
      0xF8 -> (LDHL SP ImmediateByte, 12)
      0x08 -> (LD16 (WordPointer ImmediateWord) SP, 20)
      0xF5 -> (PUSH AF, 16)
      0xC5 -> (PUSH BC, 16)
      0xD5 -> (PUSH DE, 16)
      0xE5 -> (PUSH HL, 16)
      0xF1 -> (POP AF, 12)
      0xC1 -> (POP BC, 12)
      0xD1 -> (POP DE, 12)
      0xE1 -> (POP HL, 12)
      0x87 -> (ADD A, 4)
      0x80 -> (ADD B, 4)
      0x81 -> (ADD C, 4)
      0x82 -> (ADD D, 4)
      0x83 -> (ADD E, 4)
      0x84 -> (ADD H, 4)
      0x85 -> (ADD L, 4)
      0x86 -> (ADD (BytePointer HL), 8)
      0xC6 -> (ADD ImmediateByte, 8)
      0x8F -> (ADC A, 4)
      0x88 -> (ADC B, 4)
      0x89 -> (ADC C, 4)
      0x8A -> (ADC D, 4)
      0x8B -> (ADC E, 4)
      0x8C -> (ADC H, 4)
      0x8D -> (ADC L, 4)
      0x8E -> (ADC (BytePointer HL), 8)
      0xCE -> (ADC ImmediateByte, 8)
      0x97 -> (SUB A, 4)
      0x90 -> (SUB B, 4)
      0x91 -> (SUB C, 4)
      0x92 -> (SUB D, 4)
      0x93 -> (SUB E, 4)
      0x94 -> (SUB H, 4)
      0x95 -> (SUB L, 4)
      0x96 -> (SUB (BytePointer HL), 8)
      0xD6 -> (SUB ImmediateByte, 8)
      0x9F -> (SBC A, 4)
      0x98 -> (SBC B, 4)
      0x99 -> (SBC C, 4)
      0x9A -> (SBC D, 4)
      0x9B -> (SBC E, 4)
      0x9C -> (SBC H, 4)
      0x9D -> (SBC L, 4)
      0x9E -> (SBC (BytePointer HL), 8)
      0xDE -> (SBC ImmediateByte, 8)
      0xA7 -> (AND A, 4)
      0xA0 -> (AND B, 4)
      0xA1 -> (AND C, 4)
      0xA2 -> (AND D, 4)
      0xA3 -> (AND E, 4)
      0xA4 -> (AND H, 4)
      0xA5 -> (AND L, 4)
      0xA6 -> (AND (BytePointer HL), 8)
      0xE6 -> (AND ImmediateByte, 8)
      0xB7 -> (OR A, 4)
      0xB0 -> (OR B, 4)
      0xB1 -> (OR C, 4)
      0xB2 -> (OR D, 4)
      0xB3 -> (OR E, 4)
      0xB4 -> (OR H, 4)
      0xB5 -> (OR L, 4)
      0xB6 -> (OR (BytePointer HL), 8)
      0xF6 -> (OR ImmediateByte, 8)
      0xAF -> (XOR A, 4)
      0xA8 -> (XOR B, 4)
      0xA9 -> (XOR C, 4)
      0xAA -> (XOR D, 4)
      0xAB -> (XOR E, 4)
      0xAC -> (XOR H, 4)
      0xAD -> (XOR L, 4)
      0xAE -> (XOR (BytePointer HL), 8)
      0xEE -> (XOR ImmediateByte, 8)
      0xBF -> (CP A, 4)
      0xB8 -> (CP B, 4)
      0xB9 -> (CP C, 4)
      0xBA -> (CP D, 4)
      0xBB -> (CP E, 4)
      0xBC -> (CP H, 4)
      0xBD -> (CP L, 4)
      0xBE -> (CP (BytePointer HL), 8)
      0xFE -> (CP ImmediateByte, 8)
      0x3C -> (INC A, 4)
      0x04 -> (INC B, 4)
      0x0C -> (INC C, 4)
      0x14 -> (INC D, 4)
      0x1C -> (INC E, 4)
      0x24 -> (INC H, 4)
      0x2C -> (INC L, 4)
      0x34 -> (INC (BytePointer HL), 12)
      0x3D -> (DEC A, 4)
      0x05 -> (DEC B, 4)
      0x0D -> (DEC C, 4)
      0x15 -> (DEC D, 4)
      0x1D -> (DEC E, 4)
      0x25 -> (DEC H, 4)
      0x2D -> (DEC L, 4)
      0x35 -> (DEC (BytePointer HL), 12)
      0x09 -> (ADD16 BC, 8)
      0x19 -> (ADD16 DE, 8)
      0x29 -> (ADD16 HL, 8)
      0x39 -> (ADD16 SP, 8)
      0xE8 -> (ADDSP ImmediateByte, 16)
      0x03 -> (INC16 BC, 8)
      0x13 -> (INC16 DE, 8)
      0x23 -> (INC16 HL, 8)
      0x33 -> (INC16 SP, 8)
      0x0B -> (DEC16 BC, 8)
      0x1B -> (DEC16 DE, 8)
      0x2B -> (DEC16 HL, 8)
      0x3B -> (DEC16 SP, 8)
      0xCB -> (COMPOUND, 0)
      0x27 -> (DAA, 4)
      0x2F -> (CPL, 4)
      0x3F -> (CCF, 4)
      0x37 -> (SCF, 4)
      0x00 -> (NOP, 4)
      0x76 -> (HALT, 4)
      0x10 -> (STOP, 4)
      0xF3 -> (DI, 4)
      0xFB -> (EI, 4)
      0x07 -> (RLC A, 4)
      0x17 -> (RL A, 4)
      0x0F -> (RRC A, 4)
      0x1F -> (RR A, 4)
      0xC3 -> (JP ImmediateWord, 12)
      0xC2 -> (JPC JumpNZ ImmediateWord, 12)
      0xCA -> (JPC JumpZ ImmediateWord, 12)
      0xD2 -> (JPC JumpNC ImmediateWord, 12)
      0xDA -> (JPC JumpC ImmediateWord, 12)
      0xE9 -> (JP (WordPointer HL), 4)
      0x18 -> (JR ImmediateByte, 8)
      0x20 -> (JRC JumpNZ ImmediateByte, 8)
      0x28 -> (JRC JumpZ ImmediateByte, 8)
      0x30 -> (JRC JumpNC ImmediateByte, 8)
      0x38 -> (JRC JumpC ImmediateByte, 8)
      0xCD -> (CALL ImmediateWord, 12)
      0xC4 -> (CALLC JumpNZ ImmediateWord, 12)
      0xCC -> (CALLC JumpZ ImmediateWord, 12)
      0xD4 -> (CALLC JumpNC ImmediateWord, 12)
      0xDC -> (CALLC JumpC ImmediateWord, 12)
      0xC7 -> (RST 0x00, 32)
      0xCF -> (RST 0x08, 32)
      0xD7 -> (RST 0x10, 32)
      0xDF -> (RST 0x18, 32)
      0xE7 -> (RST 0x20, 32)
      0xEF -> (RST 0x28, 32)
      0xF7 -> (RST 0x30, 32)
      0xFF -> (RST 0x38, 32)
      0xC9 -> (RET, 8)
      0xC0 -> (RETC JumpNZ, 8)
      0xC8 -> (RETC JumpZ, 8)
      0xD0 -> (RETC JumpNC, 8)
      0xD8 -> (RETC JumpC, 8)
      0xD9 -> (RETI, 8)
      
compoundInstruction (Byte opCode) =
   case opCode of
      0x37 -> (SWAP A, 8)
      0x30 -> (SWAP B, 8)
      0x31 -> (SWAP C, 8)
      0x32 -> (SWAP D, 8)
      0x33 -> (SWAP E, 8)
      0x34 -> (SWAP H, 8)
      0x35 -> (SWAP L, 8)
      0x36 -> (SWAP (BytePointer HL), 16)
      0x07 -> (RLC A, 8)
      0x00 -> (RLC B, 8)
      0x01 -> (RLC C, 8)
      0x02 -> (RLC D, 8)
      0x03 -> (RLC E, 8)
      0x04 -> (RLC H, 8)
      0x05 -> (RLC L, 8)
      0x06 -> (RLC (BytePointer HL), 16)
      0x17 -> (RL A, 8)
      0x10 -> (RL B, 8)
      0x11 -> (RL C, 8)
      0x12 -> (RL D, 8)
      0x13 -> (RL E, 8)
      0x14 -> (RL H, 8)
      0x15 -> (RL L, 8)
      0x16 -> (RL (BytePointer HL), 16)
      0x0F -> (RRC A, 8)
      0x08 -> (RRC B, 8)
      0x09 -> (RRC C, 8)
      0x0A -> (RRC D, 8)
      0x0B -> (RRC E, 8)
      0x0C -> (RRC H, 8)
      0x0D -> (RRC L, 8)
      0x0E -> (RRC (BytePointer HL), 16)
      0x1F -> (RR A, 8)
      0x18 -> (RR B, 8)
      0x19 -> (RR C, 8)
      0x1A -> (RR D, 8)
      0x1B -> (RR E, 8)
      0x1C -> (RR H, 8)
      0x1D -> (RR L, 8)
      0x1E -> (RR (BytePointer HL), 16)
      0x27 -> (SLA A, 8)
      0x20 -> (SLA B, 8)
      0x21 -> (SLA C, 8)
      0x22 -> (SLA D, 8)
      0x23 -> (SLA E, 8)
      0x24 -> (SLA H, 8)
      0x25 -> (SLA L, 8)
      0x26 -> (SLA (BytePointer HL), 16)
      0x2F -> (SRA A, 8)
      0x28 -> (SRA B, 8)
      0x29 -> (SRA C, 8)
      0x2A -> (SRA D, 8)
      0x2B -> (SRA E, 8)
      0x2C -> (SRA H, 8)
      0x2D -> (SRA L, 8)
      0x2E -> (SRA (BytePointer HL), 16)
      0x3F -> (SRL A, 8)
      0x38 -> (SRL B, 8)
      0x39 -> (SRL C, 8)
      0x3A -> (SRL D, 8)
      0x3B -> (SRL E, 8)
      0x3C -> (SRL H, 8)
      0x3D -> (SRL L, 8)
      0x3E -> (SRL (BytePointer HL), 16)
      0x47 -> (BIT 0 A, 8)
      0x40 -> (BIT 0 B, 8)
      0x41 -> (BIT 0 C, 8)
      0x42 -> (BIT 0 D, 8)
      0x43 -> (BIT 0 E, 8)
      0x44 -> (BIT 0 H, 8)
      0x45 -> (BIT 0 L, 8)
      0x46 -> (BIT 0 (BytePointer HL), 16)
      0x4F -> (BIT 1 A, 8)
      0x48 -> (BIT 1 B, 8)
      0x49 -> (BIT 1 C, 8)
      0x4A -> (BIT 1 D, 8)
      0x4B -> (BIT 1 E, 8)
      0x4C -> (BIT 1 H, 8)
      0x4D -> (BIT 1 L, 8)
      0x4E -> (BIT 1 (BytePointer HL), 16)
      0x57 -> (BIT 2 A, 8)
      0x50 -> (BIT 2 B, 8)
      0x51 -> (BIT 2 C, 8)
      0x52 -> (BIT 2 D, 8)
      0x53 -> (BIT 2 E, 8)
      0x54 -> (BIT 2 H, 8)
      0x55 -> (BIT 2 L, 8)
      0x56 -> (BIT 2 (BytePointer HL), 16)
      0x5F -> (BIT 3 A, 8)
      0x58 -> (BIT 3 B, 8)
      0x59 -> (BIT 3 C, 8)
      0x5A -> (BIT 3 D, 8)
      0x5B -> (BIT 3 E, 8)
      0x5C -> (BIT 3 H, 8)
      0x5D -> (BIT 3 L, 8)
      0x5E -> (BIT 3 (BytePointer HL), 16)
      0x67 -> (BIT 4 A, 8)
      0x60 -> (BIT 4 B, 8)
      0x61 -> (BIT 4 C, 8)
      0x62 -> (BIT 4 D, 8)
      0x63 -> (BIT 4 E, 8)
      0x64 -> (BIT 4 H, 8)
      0x65 -> (BIT 4 L, 8)
      0x66 -> (BIT 4 (BytePointer HL), 16)
      0x6F -> (BIT 5 A, 8)
      0x68 -> (BIT 5 B, 8)
      0x69 -> (BIT 5 C, 8)
      0x6A -> (BIT 5 D, 8)
      0x6B -> (BIT 5 E, 8)
      0x6C -> (BIT 5 H, 8)
      0x6D -> (BIT 5 L, 8)
      0x6E -> (BIT 5 (BytePointer HL), 16)
      0x77 -> (BIT 6 A, 8)
      0x70 -> (BIT 6 B, 8)
      0x71 -> (BIT 6 C, 8)
      0x72 -> (BIT 6 D, 8)
      0x73 -> (BIT 6 E, 8)
      0x74 -> (BIT 6 H, 8)
      0x75 -> (BIT 6 L, 8)
      0x76 -> (BIT 6 (BytePointer HL), 16)
      0x7F -> (BIT 7 A, 8)
      0x78 -> (BIT 7 B, 8)
      0x79 -> (BIT 7 C, 8)
      0x7A -> (BIT 7 D, 8)
      0x7B -> (BIT 7 E, 8)
      0x7C -> (BIT 7 H, 8)
      0x7D -> (BIT 7 L, 8)
      0x7E -> (BIT 7 (BytePointer HL), 16)
      0x87 -> (RES 0 A, 8)
      0x80 -> (RES 0 B, 8)
      0x81 -> (RES 0 C, 8)
      0x82 -> (RES 0 D, 8)
      0x83 -> (RES 0 E, 8)
      0x84 -> (RES 0 H, 8)
      0x85 -> (RES 0 L, 8)
      0x86 -> (RES 0 (BytePointer HL), 16)
      0x8F -> (RES 1 A, 8)
      0x88 -> (RES 1 B, 8)
      0x89 -> (RES 1 C, 8)
      0x8A -> (RES 1 D, 8)
      0x8B -> (RES 1 E, 8)
      0x8C -> (RES 1 H, 8)
      0x8D -> (RES 1 L, 8)
      0x8E -> (RES 1 (BytePointer HL), 16)
      0x97 -> (RES 2 A, 8)
      0x90 -> (RES 2 B, 8)
      0x91 -> (RES 2 C, 8)
      0x92 -> (RES 2 D, 8)
      0x93 -> (RES 2 E, 8)
      0x94 -> (RES 2 H, 8)
      0x95 -> (RES 2 L, 8)
      0x96 -> (RES 2 (BytePointer HL), 16)
      0x9F -> (RES 3 A, 8)
      0x98 -> (RES 3 B, 8)
      0x99 -> (RES 3 C, 8)
      0x9A -> (RES 3 D, 8)
      0x9B -> (RES 3 E, 8)
      0x9C -> (RES 3 H, 8)
      0x9D -> (RES 3 L, 8)
      0x9E -> (RES 3 (BytePointer HL), 16)
      0xA7 -> (RES 4 A, 8)
      0xA0 -> (RES 4 B, 8)
      0xA1 -> (RES 4 C, 8)
      0xA2 -> (RES 4 D, 8)
      0xA3 -> (RES 4 E, 8)
      0xA4 -> (RES 4 H, 8)
      0xA5 -> (RES 4 L, 8)
      0xA6 -> (RES 4 (BytePointer HL), 16)
      0xAF -> (RES 5 A, 8)
      0xA8 -> (RES 5 B, 8)
      0xA9 -> (RES 5 C, 8)
      0xAA -> (RES 5 D, 8)
      0xAB -> (RES 5 E, 8)
      0xAC -> (RES 5 H, 8)
      0xAD -> (RES 5 L, 8)
      0xAE -> (RES 5 (BytePointer HL), 16)
      0xB7 -> (RES 6 A, 8)
      0xB0 -> (RES 6 B, 8)
      0xB1 -> (RES 6 C, 8)
      0xB2 -> (RES 6 D, 8)
      0xB3 -> (RES 6 E, 8)
      0xB4 -> (RES 6 H, 8)
      0xB5 -> (RES 6 L, 8)
      0xB6 -> (RES 6 (BytePointer HL), 16)
      0xBF -> (RES 7 A, 8)
      0xB8 -> (RES 7 B, 8)
      0xB9 -> (RES 7 C, 8)
      0xBA -> (RES 7 D, 8)
      0xBB -> (RES 7 E, 8)
      0xBC -> (RES 7 H, 8)
      0xBD -> (RES 7 L, 8)
      0xBE -> (RES 7 (BytePointer HL), 16)
      0xC7 -> (SET 0 A, 8)
      0xC0 -> (SET 0 B, 8)
      0xC1 -> (SET 0 C, 8)
      0xC2 -> (SET 0 D, 8)
      0xC3 -> (SET 0 E, 8)
      0xC4 -> (SET 0 H, 8)
      0xC5 -> (SET 0 L, 8)
      0xC6 -> (SET 0 (BytePointer HL), 16)
      0xCF -> (SET 1 A, 8)
      0xC8 -> (SET 1 B, 8)
      0xC9 -> (SET 1 C, 8)
      0xCA -> (SET 1 D, 8)
      0xCB -> (SET 1 E, 8)
      0xCC -> (SET 1 H, 8)
      0xCD -> (SET 1 L, 8)
      0xCE -> (SET 1 (BytePointer HL), 16)
      0xD7 -> (SET 2 A, 8)
      0xD0 -> (SET 2 B, 8)
      0xD1 -> (SET 2 C, 8)
      0xD2 -> (SET 2 D, 8)
      0xD3 -> (SET 2 E, 8)
      0xD4 -> (SET 2 H, 8)
      0xD5 -> (SET 2 L, 8)
      0xD6 -> (SET 2 (BytePointer HL), 16)
      0xDF -> (SET 3 A, 8)
      0xD8 -> (SET 3 B, 8)
      0xD9 -> (SET 3 C, 8)
      0xDA -> (SET 3 D, 8)
      0xDB -> (SET 3 E, 8)
      0xDC -> (SET 3 H, 8)
      0xDD -> (SET 3 L, 8)
      0xDE -> (SET 3 (BytePointer HL), 16)
      0xE7 -> (SET 4 A, 8)
      0xE0 -> (SET 4 B, 8)
      0xE1 -> (SET 4 C, 8)
      0xE2 -> (SET 4 D, 8)
      0xE3 -> (SET 4 E, 8)
      0xE4 -> (SET 4 H, 8)
      0xE5 -> (SET 4 L, 8)
      0xE6 -> (SET 4 (BytePointer HL), 16)
      0xEF -> (SET 5 A, 8)
      0xE8 -> (SET 5 B, 8)
      0xE9 -> (SET 5 C, 8)
      0xEA -> (SET 5 D, 8)
      0xEB -> (SET 5 E, 8)
      0xEC -> (SET 5 H, 8)
      0xED -> (SET 5 L, 8)
      0xEE -> (SET 5 (BytePointer HL), 16)
      0xF7 -> (SET 6 A, 8)
      0xF0 -> (SET 6 B, 8)
      0xF1 -> (SET 6 C, 8)
      0xF2 -> (SET 6 D, 8)
      0xF3 -> (SET 6 E, 8)
      0xF4 -> (SET 6 H, 8)
      0xF5 -> (SET 6 L, 8)
      0xF6 -> (SET 6 (BytePointer HL), 16)
      0xFF -> (SET 7 A, 8)
      0xF8 -> (SET 7 B, 8)
      0xF9 -> (SET 7 C, 8)
      0xFA -> (SET 7 D, 8)
      0xFB -> (SET 7 E, 8)
      0xFC -> (SET 7 H, 8)
      0xFD -> (SET 7 L, 8)
      0xFE -> (SET 7 (BytePointer HL), 16)